require 'prime'

def A(n)
  m = Math.sqrt(n).to_i + 1
  ary = Array.new(n + 1, 0)
  (0..m).each{|i|
    (0..m).each{|j|
      k = i * i + 2 * j * j
      if k <= n
        if i == 0 && j == 0
          ary[k] += 0
        elsif i > 0 && j > 0
          ary[k] += 2
        else
          ary[k] += 1
        end
      end
    }
  }
  ary
end

n = 10 * 10 ** 7
ary = A(n)

p a = (0..100).map{|i| ary.index(i)}
(1..30).each{|i|
  j = a[i].to_i
  print i
  print ' '
  if j < 2
    puts j
  else
    puts j.to_s + " = " + j.prime_division.map{|i| i.join("^")}.join("*")
  end
}

# 1 1
# 2 3 = 3^1
# 3 9 = 3^2
# 4 27 = 3^3
# 5 81 = 3^4
# 6 99 = 3^2*11^1
# 7 729 = 3^6
# 8 297 = 3^3*11^1
# 9 1089 = 3^2*11^2
# 10 891 = 3^4*11^1
# 11 59049 = 3^10
# 12 1683 = 3^2*11^1*17^1
# 13 531441 = 3^12
# 14 8019 = 3^6*11^1
# 15 9801 = 3^4*11^2
# 16 5049 = 3^3*11^1*17^1
# 17 43046721 = 3^16
# 18 18513 = 3^2*11^2*17^1
# 19 0
# 20 15147 = 3^4*11^1*17^1
# 21 88209 = 3^6*11^2
# 22 649539 = 3^10*11^1
# 23 0
# 24 31977 = 3^2*11^1*17^1*19^1
# 25 1185921 = 3^4*11^4
# 26 5845851 = 3^12*11^1
# 27 314721 = 3^2*11^2*17^2
# 28 136323 = 3^6*11^1*17^1
# 29 0
# 30 166617 = 3^4*11^2*17^1


