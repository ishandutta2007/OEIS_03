def A(a, b, x, y, n)
  ary = [a]
  while ary.size <= n
    a, b = b, x * b + y * a
    ary << a
  end
  ary
end


ary0 =
[9,4,2,1,8,7,5,2,4,6,3,8,9,1,5,2,1,5,4,8,7,4,5,9,
 9,3,2,3,1,2,8,0,0,8,1,2,2,9,7,1,6,4,6,4,8,6,4,8,4,
 1,1,1,0,0,2,2,6,7,2,7,1,6,1,9,1,0,3,3,3,4,2,1,0,8,
 7,9,1,0,7,7,8,5,0,6,9,3,3,6,1,2,8,3,6,4,1,0,6,0,9,
 7]
p ary0

n = 90
ary1 = A(1, 1, 3, 10, n)
ary2 = A(-1, 23, 3, 10, n)
(1..n).each{|i|
  k = ary0[0..i - 1].join.reverse.to_i
  l = 7 * ary1[i]
  m = ary2[i]
  p [(k * l - m) % 10 ** i, m, (k * m - l) % 10 ** i, l]
  #p [i, m, k]
}
# ary1 = A(1, 1, 1, 20, n)
# ary2 = A(1, 41, 1, 20, n)
# (1..n).each{|i|
#   k = ary0[0..i - 1].join.reverse.to_i
#   l = 9 * ary1[i]
#   m = ary2[i]
#   p [(k * l - m) % 10 ** i, m, (k * m - l) % 10 ** i, l]
#   #p [i, m, k]
# }
